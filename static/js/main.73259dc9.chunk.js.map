{"version":3,"sources":["Redux/reducers/setOne.js","Redux/reducers/setTime.js","Redux/reducers/setTwo.js","Redux/reducers/setResult.js","Redux/reducers/index.js","Components/Dashboard.js","Redux/actions/index.js","Components/DisplayResults.js","Components/GameLogic.js","Components/Game.js","index.js"],"names":["setOneReducer","state","action","type","value","setTimeReducer","setTwoReducer","setResultReducer","allReducers","combineReducers","getOne","getTime","getTwo","getResult","Container","styled","div","PaperContainer","Title","DifficultyContainer","Dashboard","Paper","elevation","className","to","Button","variant","color","setTime","DisplayResults","props","results","settings","useState","totalPoints","setTotalPoints","displayResults","setDisplayResults","useEffect","result","difficulty","numberOne","numberTwo","userResult","points","false","time","Grid","container","spacing","item","xs","map","index","useStyles","makeStyles","theme","root","display","justifyContent","flexDirection","alignItems","width","fontSize","marginTop","Counter","TimeLeft","p","Content","TaskContent","GameLogic","round","updateRound","dispatch","useDispatch","classes","showStart","setShowStart","showCounter","setShowCounter","counter","setCounter","answerTimeDisplay","setAnswerTimeDisplay","answerTime","showTask","setShowTask","showResults","setShowResults","setUserResult","setNumberOne","setNumberTwo","finalResults","setFinalResults","useSelector","disabledSubmit","setDisabledSubmit","roundHelper","console","log","length","startAnswerCounter","createTask","answerInterval","setInterval","clearInterval","rounds","one","Math","floor","random","two","setOne","setTwo","onClick","interval","startCounter","onSubmit","e","preventDefault","noValidate","autoComplete","TextField","required","id","maxLength","onChange","event","target","slice","setResult","disabled","CircularProgress","timeMultiply","Topbar","TopbarInfo","maxPoints","Game","currentSetting","findIndex","x","match","params","currenRound","setCurrenRound","toUpperCase","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","style","height","maxWidth","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.73259dc9.chunk.js","sourcesContent":["const setOneReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'SETONE':\n      return state = action.value;\n    default:\n      return state\n  }\n};\n\nexport default setOneReducer;\n","const setTimeReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'SETTIME':\n      return state = action.value;\n    default:\n      return state\n  }\n};\n\nexport default setTimeReducer;\n","const setTwoReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'SETTWO':\n      return state = action.value;\n    default:\n      return state\n  }\n};\n\nexport default setTwoReducer;\n","const setResultReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'SETRESULT':\n      return state = action.value;\n    default:\n      return state\n  }\n};\n\nexport default setResultReducer;\n","import { combineReducers } from 'redux';\nimport setOneReducer from \"./setOne\";\nimport setTimeReducer from \"./setTime\";\nimport setTwoReducer from \"./setTwo\";\nimport setResultReducer from \"./setResult\";\n\nconst allReducers = combineReducers({\n    getOne: setOneReducer,\n    getTime: setTimeReducer,\n    getTwo: setTwoReducer,\n    getResult: setResultReducer\n});\n\nexport default allReducers;\n","import React from 'react';\nimport { Paper, Button } from '@material-ui/core';\nimport styled from 'styled-components'\nimport '../index.css';\nimport { Link } from 'react-router-dom';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nconst PaperContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nconst Title = styled.div`\n  text-align: center;\n  font-size: 25px;\n  font-weight: bold;\n  color: slateblue;\n`;\n\nconst DifficultyContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\n\nconst Dashboard = () => {\n  return (\n    <Container>\n      <Paper elevation={3}>\n        <PaperContainer>\n          <Title>MultiplicateIt !</Title>\n          <p>Choose difficulty:</p>\n          <DifficultyContainer className='buttonsContainer'>\n            <Link to={'/game/easy'}>\n              <Button variant=\"contained\">Easy</Button>\n            </Link>\n            <Link to={'/game/normal'}>\n              <Button variant=\"contained\" color=\"primary\">Normal</Button>\n            </Link>\n            <Link to={'/game/hard'}>\n              <Button variant=\"contained\" color=\"secondary\">Hard</Button>\n            </Link>\n          </DifficultyContainer>\n        </PaperContainer>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","export const setTime = (value = 0) => ({\n  type: 'SETTIME',\n  value: value\n});\n\nexport const setOne = (value = 0) => ({\n  type: 'SETONE',\n  value: value\n});\n\nexport const setTwo = (value = 0) => ({\n  type: 'SETTWO',\n  value: value\n});\n\nexport const setResult = (value = 0) => ({\n  type: 'SETRESULT',\n  value: value\n});\n","import React, {useEffect, useState} from 'react';\nimport { Grid } from '@material-ui/core';\nimport '../index.css';\n\nconst DisplayResults = props => {\n  let { results, settings } = props;\n  const [totalPoints, setTotalPoints] = useState(0);\n  const [displayResults, setDisplayResults] = useState([]);\n\n  useEffect(() => {\n    let totalPoints = 0;\n    for (const result of results) {\n      if (settings.difficulty === 'easy') {\n        if ((result.numberOne * result.numberTwo) == result.userResult) {\n          result.points = 10;\n        } else {\n          result.points = 0;\n          result.false = true\n        }\n      } else if (settings.difficulty === 'normal') {\n        if ((result.numberOne * result.numberTwo) == result.userResult) {\n          if (result.time % 2 === 0) {\n            result.points = result.time;\n          } else {\n            result.points = result.time++;\n          }\n        } else {\n          result.points = 0;\n          result.false = true\n        }\n      } else {\n        if ((result.numberOne * result.numberTwo) == result.userResult) {\n          result.points = result.time * 2;\n        } else {\n          result.points = 0;\n          result.false = true\n        }\n      }\n      totalPoints += result.points;\n    }\n    setDisplayResults(results);\n    setTotalPoints(totalPoints);\n  }, [props]);\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={3}><></></Grid>\n        <Grid item xs={3}><p>Operation</p></Grid>\n        <Grid item xs={3}><p>Result</p></Grid>\n        <Grid item xs={3}><p>Points</p></Grid>\n        {displayResults.map((result, index) => (\n          <>\n            <Grid item xs={3}><p>{`Operation nr ${index+1}:`}</p></Grid>\n            <Grid item xs={3}><p>{`${result.numberOne} * ${result.numberTwo}`}</p></Grid>\n            <Grid item xs={3}><p className={(result.false ? 'false' : '')}>{result.false ? result.userResult === -1 ? 'no result': <del>{result.userResult}</del> : `   ${result.userResult}`}</p></Grid>\n            <Grid item xs={3}><p>{`   ${result.points}`}</p></Grid>\n          </>\n        ))}\n      </Grid>\n      <p>{`All points: ${totalPoints}`}</p>\n    </>\n  );\n};\n\nexport default DisplayResults;\n","import React, { useState, useEffect } from 'react';\nimport { Button, CircularProgress, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styled from 'styled-components';\nimport '../index.css';\nimport { setResult, setTime, setOne, setTwo } from '../Redux/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DisplayResults from './DisplayResults';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '&': {\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    '& > .input': {\n      width: '20px!important',\n      fontSize: '20px!important',\n    },\n    '& > button': {\n      marginTop: '20px'\n    },\n  },\n}));\n\nconst Counter = styled.div`\n  font-size: 200px;\n  color: lightcoral;\n  font-weight: bold;\n`;\n\nconst TimeLeft = styled.p`\n  font-size: 20px;\n  color: lightcoral;\n  font-weight: bold;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-direction: column;\n  height: 300px;\n  z-index: 2;\n`;\n\nconst TaskContent = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\n\n\n\nconst GameLogic = props => {\n  let { settings, round, updateRound } = props;\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [showStart, setShowStart] = useState(true);\n  const [showCounter, setShowCounter] = useState(false);\n  let [counter, setCounter] = useState(3);\n  let [answerTimeDisplay, setAnswerTimeDisplay] = useState(settings.time);\n  let answerTime = settings.time;\n  const [showTask, setShowTask] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [userResult, setUserResult] = useState('');\n  const [numberOne, setNumberOne] = useState(0);\n  const [numberTwo, setNumberTwo] = useState(0);\n  const [finalResults, setFinalResults] = useState([]);\n  const getOne = useSelector(state => state.getOne);\n  const getTwo = useSelector(state => state.getTwo);\n  const getTime = useSelector(state => state.getTime);\n  const getResult = useSelector(state => state.getResult);\n  const [disabledSubmit, setDisabledSubmit] = useState(false);\n\n  useEffect(() => {\n    let roundHelper = round;\n    if (showResults) {\n      console.log('2')\n      roundHelper++;\n    }\n    console.log(finalResults.length);\n    console.log(roundHelper-1);\n    if ((finalResults.length != roundHelper-1)) {\n      console.log('now')\n      setFinalResults(finalResults => [...finalResults, {numberOne: getOne, numberTwo: getTwo, userResult: -1, time: null}]);\n    }\n  }, [round, showResults]);\n\n  const startCounter = () => {\n    setShowCounter(true);\n    setCounter(counter--);\n    const interval = setInterval(() => {\n      if (counter === 0) {\n        setShowCounter(false);\n        clearInterval(interval);\n        startAnswerCounter();\n      }\n      setCounter(counter--);\n    }, 1000);\n  }\n\n  const startAnswerCounter = () => {\n    updateRound(round++);\n    answerTime = settings.time;\n    createTask();\n    setShowTask(true);\n    setAnswerTimeDisplay(answerTime);\n    dispatch(setTime(answerTime));\n    answerTime--;\n    const answerInterval = setInterval(() => {\n      setAnswerTimeDisplay(answerTime);\n      dispatch(setTime(answerTime));\n      if (answerTime <= 0) {\n        clearInterval(answerInterval);\n        if (round !== settings.rounds + 1) {\n          setDisabledSubmit(false);\n          startAnswerCounter();\n        } else {\n          setShowTask(false);\n          setShowResults(true);\n        }\n      } else {\n        answerTime--;\n      }\n    }, 1000);\n  }\n\n  const handleChangeInput = event => {\n    const { value } = event.target;\n    const result = value.slice(0, 2);\n    setUserResult(result);\n    dispatch(setResult(result));\n  }\n\n  const createTask = () => {\n    const one = Math.floor(Math.random() * 10) + 1;\n    const two = Math.floor(Math.random() * 10) + 1;\n    dispatch(setOne(one));\n    dispatch(setTwo(two));\n    setNumberOne(one);\n    setNumberTwo(two);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setFinalResults(finalResults => [...finalResults, {numberOne: getOne, numberTwo: getTwo, userResult: getResult, time: getTime}]);\n    setDisabledSubmit(true);\n  }\n\n\n  return (\n    <>\n      { showStart ? <Button onClick={() => {setShowStart(false); startCounter();}} variant=\"contained\" color=\"secondary\">Start</Button> : null }\n      { showCounter ? <Counter>{counter}</Counter> : null}\n      { showTask ?\n        <>\n          <Content>\n            <TimeLeft>{answerTimeDisplay}</TimeLeft>\n            <p className='operation'> {`${numberOne} * ${numberTwo}`}</p>\n            <TaskContent>\n              <form onSubmit={handleSubmit} className={classes.root} noValidate autoComplete=\"off\">\n                <TextField className='input' required id=\"standard-basic\" maxLength=\"2\" value={userResult} onChange={handleChangeInput}/>\n                <Button  disabled={disabledSubmit} type=\"submit\" variant=\"outlined\">Save</Button>\n              </form>\n            </TaskContent>\n          </Content>\n          <CircularProgress className=\"progress\" variant=\"static\" value={answerTimeDisplay * settings.timeMultiply} />\n        </>\n        : null }\n      { showResults ? <DisplayResults results={finalResults} settings={settings}/> : null }\n    </>\n  );\n};\n\nexport default GameLogic;\n","import React, { useState } from 'react';\nimport { Paper } from '@material-ui/core';\nimport styled from 'styled-components'\nimport '../index.css';\nimport GameLogic from './GameLogic';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nconst PaperContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  padding: 20px;\n  min-height: 400px;\n  min-width: 400px;\n  position: relative;\n`;\n\nconst Topbar = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  height: 50px;\n  border-bottom: 1px solid grey;\n`;\n\nconst Title = styled.div`\n  font-size: 20px;\n  font-weight: bold;\n  color: slateblue;\n`;\n\nconst TopbarInfo = styled.div`\n  font-size: 13px;\n  color: lightcoral;\n  font-weight: bold;\n`;\n\nconst settings = [\n  { id: 0, type: 'easy', time: 15, timeMultiply: 6.6, maxPoints: 10, rounds: 10 },\n  { id: 1, type: 'normal', time: 10, timeMultiply: 10, maxPoints: 10, rounds: 15 },\n  { id: 2, type: 'hard', time: 5, timeMultiply: 20, maxPoints: 10, rounds: 5 }\n]\n\nconst Game = props => {\n  const currentSetting = settings.findIndex(x => x.type === props.match.params.difficulty);\n  const [currenRound, setCurrenRound] = useState(1);\n\n  const updateRound = round => {\n    setCurrenRound(round);\n  }\n\n  return (\n    <Container>\n      <Paper elevation={3}>\n        <Topbar>\n          <TopbarInfo>{props.match.params.difficulty.toUpperCase()}</TopbarInfo>\n          <Title>MultiplicateIt !</Title>\n          <TopbarInfo>{`${currenRound}/${settings[currentSetting].rounds}`}</TopbarInfo>\n        </Topbar>\n        <PaperContainer>\n          <GameLogic settings={settings[currentSetting]} round={currenRound} updateRound={updateRound} />\n        </PaperContainer>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { createStore } from 'redux';\nimport allReducers from './Redux/reducers';\nimport { Provider } from 'react-redux'\nimport Dashboard from './Components/Dashboard';\nimport { Container } from '@material-ui/core';\nimport { Router, Route, Switch, BrowserRouter } from 'react-router-dom';\nimport Game from \"./Components/Game\";\n\nconst store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n\nReactDOM.render(\n      <Provider store={store}>\n          <Container style={{height: \"100vh\"}} maxWidth=\"md\">\n            <BrowserRouter>\n                <Switch>\n                  <Route exact path='/' component={Dashboard}/>\n                  <Route exact path='/MultiplicateIt' component={Dashboard}/>\n                  <Route path='/MultiplicateIt/game/:difficulty' component={Game}/>\n                </Switch>\n            </BrowserRouter>\n          </Container>\n      </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}